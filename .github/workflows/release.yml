name: 🚀 Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  check-version:
    name: 🏷️ Check Version Consistency
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      tag-version: ${{ steps.get-tag.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: 📋 Get version from Cargo.toml
        id: get-version
        run: |
          VERSION=$(grep '^version = ' Cargo.toml | head -1 | sed 's/version = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Cargo.toml version: $VERSION"
      - name: 🏷️ Get version from tag
        id: get-tag
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$TAG_VERSION" >> $GITHUB_OUTPUT
          echo "Tag version: $TAG_VERSION"
      - name: ✅ Verify versions match
        run: |
          if [ "${{ steps.get-version.outputs.version }}" != "${{ steps.get-tag.outputs.version }}" ]; then
            echo "❌ Version mismatch: Cargo.toml has ${{ steps.get-version.outputs.version }}, tag has ${{ steps.get-tag.outputs.version }}"
            exit 1
          fi
          echo "✅ Versions match: ${{ steps.get-version.outputs.version }}"

  test:
    name: 🧪 Test Before Release
    runs-on: ubuntu-latest
    needs: check-version
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      - name: 🛠️ Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.87
      - name: 💾 Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: 🧪 Run tests
        run: cargo test --all-features

  publish:
    name: 📦 Publish to crates.io
    runs-on: ubuntu-latest
    needs: [ check-version, test ]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      - name: 🛠️ Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.87
      - name: 💾 Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: 📦 Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish --all-features

  create-release:
    name: 🎉 Create GitHub Release
    runs-on: ubuntu-latest
    needs: [ check-version, publish ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: 📝 Generate changelog
        id: changelog
        run: |
          # Get the previous tag
          PREV_TAG=$(git tag --sort=-version:refname | grep -v "^${{ github.ref_name }}$" | head -1)
          
          if [ -z "$PREV_TAG" ]; then
            echo "No previous tag found, using initial commit"
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" ${{ github.ref_name }})
          else
            echo "Previous tag: $PREV_TAG"
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" $PREV_TAG..${{ github.ref_name }})
          fi
          
          # Save changelog to file
          echo "$CHANGELOG" > changelog.txt
          echo "Generated changelog with $(echo "$CHANGELOG" | wc -l) entries"

      - name: 🎉 Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: 🚀 Release ${{ needs.check-version.outputs.version }}
          body_path: changelog.txt
          draft: false
          prerelease: ${{ contains(needs.check-version.outputs.version, '-') }}
